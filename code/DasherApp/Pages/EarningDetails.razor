@page "/Earnings"

@inject IReportService reportService


<div class="row">
    <div class="col-1">
        <h3>
            Earnings
        </h3>
    </div>
    <div class="col-8" style="margin-left:3%; margin-top:0.8%">
        <input type="radio" value="Weekly" name="EarningType"
               checked="@(SelectedValue.Equals("Weekly"))" @onchange="@(() => SelectedValue = "Weekly")" /> <span>Weekly</span>
        <input type="radio" value="Monthly" name="EarningType"
               checked="@(SelectedValue.Equals("Monthly"))" @onchange="@(() => SelectedValue = "Monthly")" /> <span>Monthly</span>
        <input type="radio" value="Daily" name="EarningType"
               checked="@(SelectedValue.Equals("Daily"))" @onchange="@(() => SelectedValue = "Daily")" /> <span>Daily</span>

    </div>

</div>

<div style="margin:1%">
    @if (SelectedValue == "Weekly")
    {
        <DasherApp.Pages.Controls._WeeklyEarnings></DasherApp.Pages.Controls._WeeklyEarnings>
    }
    @if (SelectedValue == "Monthly")
    {
        <DasherApp.Pages.Controls._MonthlyEarnings Years="years"></DasherApp.Pages.Controls._MonthlyEarnings>
    }
    @if (SelectedValue == "Daily")
    {
        <DasherApp.Pages.Controls._DailyEarnings></DasherApp.Pages.Controls._DailyEarnings>
    }
</div>


@code {
    public string SelectedValue { get; set; } = "Weekly";
    IEnumerable<int> years = new List<int>();

    protected override async Task OnInitializedAsync()
    {
        years = await reportService.GetYears();
    }
}

