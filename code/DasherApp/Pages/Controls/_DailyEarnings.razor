@inject IReportService reportService

<div>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Date</th>
                <th scope="col">Amount</th>
                <th scope="col">Total Minutes</th>
                <th scope="col">Hourly Rate</th>
            </tr>
        </thead>
        <tbody>
            @if (ViewModel.IsLoading)
            {
                <div class="centered">
                    <img src="images/loading.gif" />
                </div>
            }
            else
            {
                @foreach (var dailyEarning in ViewModel.DailyEarnings)
                {
                    <tr>
                        <td>
                            @dailyEarning.Date.ToShortDateString()
                        </td>
                        <td>
                            @dailyEarning.Amount.ToString("C2")
                        </td>
                        <td>
                            @dailyEarning.TotalMinutes
                        </td>
                        <td>
                            @dailyEarning.HourlyRate
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@if (ViewModel.DailyEarnings != null && ViewModel.DailyEarnings.Count() > 0)
{
<div style="text-align:center">
    <div>
        <ul class="pagination">
                <li class="page-item @(ViewModel.DailyEarnings.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" @onclick="() => GoToPage((ViewModel.DailyEarnings.CurrentPage - 1))">&laquo;</a>
            </li>
                @for (int i = 0; i < ViewModel.DailyEarnings.TotalPages; i++)
            {
                var index = i + 1;
                    <li class="page-item @(ViewModel.DailyEarnings.CurrentPage == (i+1) ? "active" : "")">
                    <a class="page-link" @onclick="() => GoToPage(index)">@index</a>
                </li>
            }
                <li class="page-item  @(ViewModel.DailyEarnings.CurrentPage == ViewModel.DailyEarnings.TotalPages ? "disabled" : "")">
                    <a class="page-link" @onclick="() => GoToPage((ViewModel.DailyEarnings.CurrentPage + 1))">&raquo;</a>
            </li>
        </ul>
    </div>
</div>

}


@code {
    public DailyEarningsViewModel ViewModel { get; set; } = new DailyEarningsViewModel();
    private IEnumerable<DailyEarningsModel> dailyEarnings = new List<DailyEarningsModel>();

    protected override async Task OnInitializedAsync()
    {
        ViewModel.IsLoading = true;
        dailyEarnings = await reportService.GetDailyEarnings(ViewModel.FromDate, ViewModel.ToDate);
        ViewModel.DailyEarnings = PagedListModel<DailyEarningsModel>.Create(dailyEarnings, 1, 10);
        ViewModel.IsLoading = false;
    }

    public void GoToPage(int page)
    {
        ViewModel.IsLoading = true;
        ViewModel.DailyEarnings = PagedListModel<DailyEarningsModel>.Create(dailyEarnings, page, 10);
        ViewModel.IsLoading = false;
    }
}
