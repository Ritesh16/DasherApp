@page "/Reports/statistics"
@inject ILocationService _locationService
@inject IStatisticsService _statisticsService

<h1>Statistics</h1>

<EditForm Model="FilterModel" OnValidSubmit="Search">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-3">
            <input type="checkbox" bind="@FilterModel.SearchWithoutDates" @oninput="CheckboxChanged" checked="checked" />
            <span>Search Without Dates</span>
        </div>
        <div class="col-2">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <DatePicker @ref="@dashFromDateTimePicker" TValue="DateTime" @bind-Date="FilterModel.FromDate" Disabled="@FilterModel.SearchWithoutDates" />
                </Addon>
                <Addon AddonType="AddonType.End">
                    <Button Color="Color.Light" Clicked="@(()=>dashFromDateTimePicker.ToggleAsync())" Disabled="@FilterModel.SearchWithoutDates">
                        <Icon Name="IconName.CalendarDay" />
                    </Button>
                </Addon>
            </Addons>
            <ValidationMessage For="()=>FilterModel.FromDate"></ValidationMessage>
        </div>
        <div class="col-2">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <DatePicker @ref="@dashToDateTimePicker" TValue="DateTime" @bind-Date="FilterModel.ToDate" Disabled="@FilterModel.SearchWithoutDates" />
                </Addon>
                <Addon AddonType="AddonType.End">
                    <Button Color="Color.Light" Clicked="@(()=>dashToDateTimePicker.ToggleAsync())" Disabled="@FilterModel.SearchWithoutDates">
                        <Icon Name="IconName.CalendarDay" />
                    </Button>
                </Addon>
            </Addons>
            <ValidationMessage For="()=>FilterModel.ToDate"></ValidationMessage>
        </div>
        <div class="col-2">
            <InputSelect @bind-Value="FilterModel.Location" class="form-control">
                <option value="All">
                    --ALL--
                </option>
                @foreach (var location in locations)
                {
                    <option value="@location">@location</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>FilterModel.Location"></ValidationMessage>
        </div>
        <div class="col-3">
            <button class="btn btn-danger">Search</button>
        </div>

    </div>


</EditForm>
<hr />
<div>
    <div class="row">
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Total Earned</h5>
                    <p class="card-text">@StatisticsModel.TotalEarned.ToString("C2")</p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Total Mileage</h5>
                    <p class="card-text">2100mi</p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Highest Earning Day</h5>
                    <p class="card-text">2023-03-03</p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Highest Mileage</h5>
                    <p class="card-text">2023-03-03</p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Hourly Rate</h5>
                    <p class="card-text">$20</p>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card" style="width: 18rem; margin:2px">
                <div class="card-body">
                    <h5 class="card-title">Highest Dash</h5>
                    <p class="card-text">$20</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div style="margin-top:10px">
    <h2>Week days Earning</h2>
</div>
<hr/>
<div>
    <div class="row">
        <div class="col-2">
            <div class="card" style="width: 11rem; margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Monday</h5>
                    <p class="card-text">$2000</p>
                    <p class="card-text">$18/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Tuesday</h5>
                    <p class="card-text">2100mi</p>
                    <p class="card-text">$17/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Wednesday</h5>
                    <p class="card-text">2023-03-03</p>
                    <p class="card-text">$18/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Thursday</h5>
                    <p class="card-text">2023-03-03</p>
                    <p class="card-text">$18/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Friday</h5>
                    <p class="card-text">2023-03-03</p>
                    <p class="card-text">$23/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Saturday</h5>
                    <p class="card-text">2023-03-03</p>
                    <p class="card-text">$14/hr</p>
                </div>
            </div>
        </div>
        <div class="col-2">
            <div class="card" style="width: 11rem;  margin:4px">
                <div class="card-body">
                    <h5 class="card-title">Sunday</h5>
                    <p class="card-text">2023-03-03</p>
                     <p class="card-text">$18/hr</p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    DatePicker<DateTime> dashFromDateTimePicker;
    DatePicker<DateTime> dashToDateTimePicker;

    IEnumerable<string> locations = new List<string>();
    public FilterModel FilterModel { get; set; } = new FilterModel();

    public StatisticsModel StatisticsModel { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        locations = await _locationService.GetLocations();
        StatisticsModel.TotalEarned = await _statisticsService.GetTotalEarned(FilterModel);
    }

    private void CheckboxChanged(ChangeEventArgs e)
    {
        // get the checkbox state
        FilterModel.SearchWithoutDates = (bool)e.Value;
    }
    public async Task Search()
    {
        StatisticsModel.TotalEarned = await _statisticsService.GetTotalEarned(FilterModel);
    }
}
